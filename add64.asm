.LC0:
        .string "Enter a: "
.LC1:
        .string "%d"
.LC2:
        .string "Enter b: "
.LC3:
        .string "Enter c: "
.LC4:
        .string "Enter d: "
.LC5:
        .string "Enter e: "
.LC6:
        .string "Enter f: "
.LC7:
        .string "Enter g: "
.LC8:
        .string "Enter h: "
.LC9:
        .string "Sum: %d\n"
main:
        sub     rsp, 40
        mov     edi, OFFSET FLAT:.LC0
        xor     eax, eax
        call    printf
        mov     rsi, rsp
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC2
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+4]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC3
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+8]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC4
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+12]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC5
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+16]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC6
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+20]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC7
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+24]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC8
        xor     eax, eax
        call    printf
        lea     rsi, [rsp+28]
        mov     edi, OFFSET FLAT:.LC1
        xor     eax, eax
        call    __isoc99_scanf
        mov     esi, DWORD PTR [rsp]
        mov     edi, OFFSET FLAT:.LC9
        xor     eax, eax
        add     esi, DWORD PTR [rsp+4]
        add     esi, DWORD PTR [rsp+8]
        add     esi, DWORD PTR [rsp+12]
        add     esi, DWORD PTR [rsp+16]
        add     esi, DWORD PTR [rsp+20]
        add     esi, DWORD PTR [rsp+24]
        add     esi, DWORD PTR [rsp+28]
        call    printf
        xor     eax, eax
        add     rsp, 40
        ret
sum:
        add     edi, esi
        add     edi, edx
        add     edi, ecx
        add     edi, r8d
        lea     eax, [rdi+r9]
        add     eax, DWORD PTR [rsp+8]
        add     eax, DWORD PTR [rsp+16]
        ret
